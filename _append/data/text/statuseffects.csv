Name,Displayed As,Symbol,Description,Stacks?,Remove at End Turn?,Remove at Start Turn?,Invisible?,Blocked by Reduce?,Script: When inflicted,Script: On any status infliction,Script: Before Start Turn,Script: On Start Turn,Script: On any equipment use,Script: On any countdown reduce,Script: End Turn,Script: After Combat,Script: On damage inflicted,Script: On damage taken,Script: On status remove
Dice Big,,,,NO,NO,NO,YES,NO,var s = new elements.Skill(~Dice Fubny~); var tw = new motion.actuators.SimpleActuator(null[;]1[;]null); tw._repeat = -1; tw.onRepeat(s.execute[;][self[;]target]); tw.move(); s.remove();,,,,,,,,,,
jackpotrangeup,Increased_Range,jackpot,Increase jackpot range by <value> at the start of your turn.,YES,NO,NO,NO,NO,,,,self.roll_range += getstatusself(~jackpotrangeup~); self.getskillcard().animate(~flashandshake~); sfx(~_thinghappens~); removestatusself(~jackpotrangeup~[;] ALL);,,,,,,,
rippermode,Ripper_Mode,rippermode,Do [sword]<value> extra damage with each attack this turn.,YES,YES,NO,NO,NO,,,,,,,,,target.hp -= getstatusself(~rippermode~);,,
rippermodefail,Ripper_Mode,rippermode,Do [sword]<value> extra damage with each attack next turn.,YES,NO,NO,NO,NO,,,inflictself(~rippermode~[;] getstatusself(~rippermodefail~)); removestatusself(~rippermodefail~[;] ALL);,,,,,,,,
manualroll,Guaranteed_Jackpot,star,Autoroll automatically <value> time(s).,YES,NO,NO,NO,NO,if(!self.roll_error && !self.roll_jackpot){ robotroll(true); self.getskillcard().animate(~flashandshake~); removestatusself(~manualroll~[;] 1); },,,robotroll(true); self.getskillcard().animate(~flashandshake~); removestatusself(~manualroll~[;] 1);,,,,,,,
survivenomorehehe,,dice3,(shouldn't be visible! if you're seeing this it's buggin'!),NO,NO,NO,YES,NO,,,,removestatusself(~survive~[;] ALL); removestatusself(~survivenomorehehe~[;] ALL);,,,,,,,
cursenext,Incoming_Curse,curse,You've cursed yourself for the next turn...,YES,NO,NO,NO,NO,,,,inflictself(~curse~[;] getstatusself(~cursenext~)); sfx(~_curse~); removestatusself(~cursenext~[;] ALL);,,,,,,,
ka...ching,Ka..._Ching!,jackpot,Guarantee jackpot in <value> turns.,YES,NO,NO,NO,NO,,,,if(getstatusself(~ka...ching~) > 1) { removestatusself(~ka...ching~[;] 1); } else { robotroll(true); removestatusself(~ka...ching~); },,,,,,,
storedprize,Stored_Prize,jackpot,[95%]Next Jackpot skill gets used <value> extra time(s).,YES,NO,NO,NO,NO,var act = new motion.actuators.SimpleActuator(null[;] 0.1[;] null); var s = new elements.DiceyScript(~if(self.roll_jackpot > 0 && self.getskillcard().skills.length >= 3){   for(i in 0...self.getskillcard().skills.length){     var s = self.getskillcard().skills[i];     if(s.script.indexOf(\~storedprizeinjected\~) == -1 && s.script.indexOf(\~storedprizeimmune\~) == -1){       s.script += \~ /*storedprizeinjected*/ if(self.hasstatus(\\\~storedprize\\\~)){var st = self.getstatus(\\\~storedprize\\\~);var newskill = new elements.Skill(\\\~\~+s.name+\~\\\~);var act = new motion.actuators.SimpleActuator(null[;] 0.15+st.value*0.15[;] null);act.onRepeat(newskill.execute[;][self[;]target]);act._repeat = st.value;act.move();self.removestatus(\\\~storedprize\\\~);}\~;     }   } }~); act.onRepeat(s.execute[;] [self[;] target]); act._repeat = -1; s.set(~act~[;] act); s.set(~self~[;] self); act.move();,,,,,,,,,,
storedbonus,Stored_Bonus,jackpot,Bonus Payout will trigger <value> time(s) next turn.,YES,NO,NO,NO,NO,,,,self.roll_jackpotbonus += getstatusself(~storedbonus~); self.roll_range += getstatusself(~storedbonus~); adjustrobotcounter(0); removestatusself(~storedbonus~[;] ALL);,,,,,,,
storedbonusupgraded,Stored_Bonus+,jackpot,Bonus Payout+ will trigger <value> time(s) next turn.,YES,NO,NO,NO,NO,,,,self.roll_jackpotbonus += getstatusself(~storedbonus~); self.roll_range += getstatusself(~storedbonus~) * 2; adjustrobotcounter(0); removestatusself(~storedbonus~[;] ALL);,,,,,,,
survivenextturn,Survive_Next_Turn,curse,Gain 1 survive next turn.,NO,NO,NO,NO,NO,,,,inflictself(~survive~[;]1); inflictself(~survivenomorehehe~[;]1); removestatusself(~survivenextturn~);,,,,,,,
placeholder,Stolen_Innate,star,(This should always be replaced! If you're reading this[;] it's a bug!),NO,NO,NO,NO,NO,var sD = switch target.innate[0]{ case ~weakfire~: ~You take double damage from [fire] fire damage and [fire] Burn.~; case ~weakice~: ~You take double damage from [ice] ice damage.~; case ~weakshock~: ~You take double damage from [shock] shock damage and [shock] Shocked?.~; case ~strongfire~: ~You take half damage from [fire] fire damage and [fire] Burn.~; case ~strongpoison~: ~You take half damage from [poison] poison.~; case ~immunestatus~: ~You can't be inflicted with [lock] locked and [ice] freeze.~; case ~goesfirst~: ~You go first during the start of this battle. So[;] really[;] nothing changes.~; case ~gaindice~: ~You gain an extra dice at the start of each turn.~; case ~vampire~: ~You can't be defeated without a Wooden Stake... which Drake doesn't have.~; default: ~You gain the effects of your enemy's stolen innate.~; } status.template.description = sD; var statuses = [~fire~[;] ~ice~[;] ~shock~[;] ~poison~[;] ~lock~[;] ~dice~]; for(i in 0...statuses.length){ if(sD.indexOf(statuses[i]) != -1){ status.symbol = statuses[i]; } } if(target.innate[0] == ~goesfirst~) status.symbol = ~dodge~;,,,,,,,,,,
jackpotshard,Jackpot_Shard,jackpotshard,4 Jackpot Shards combine into an automatic Autoroll.,YES,NO,NO,NO,NO,var isUpgraded = false; for(eq in self.equipment){ if(eq.hastag(~popoff~) && eq.namemodifier == ~+~){ isUpgraded = true; } } if(isUpgraded){ status.template.description = ~3 Jackpot Shards combine into an automatic Autoroll.~; while(getstatusself(~jackpotshard~) >= 3){ removestatusself(~jackpotshard~[;] 3); inflictself(~manualroll~); sfx(~jackpot_autoroll~); } } else{ while(getstatusself(~jackpotshard~) >= 4){ removestatusself(~jackpotshard~[;] 4); inflictself(~manualroll~); sfx(~jackpot_autoroll~); } },,,,var isUpgraded = false; for(eq in self.equipment){ if(eq.name == ~Pop Off~ && eq._upgraded){ isUpgraded = true; } } if(isUpgraded){ status.template.description = ~4 Jackpot Shards combine into a guaranteed Jackpot for next turn.~; },,,,,,
iceallnextturn,Frozen_all,ice,Turns the highest dice rolled into a 1.,NO,NO,NO,NO,NO,,,inflictself(~ice_all~); removestatusself(~iceallnextturn~);,,,,,,,,
icenextturn,Frozen,ice,Turns the highest dice rolled into a 1.,YES,NO,NO,NO,NO,,,inflictself(~ice~[;] getstatusself(~icenextturn~)); removestatusself(~icenextturn~[;] ALL);,,,,,,,,
extrajackpotskill,Bonus_Slot,gold,Your jackpot has <value> extra options. Shouldn't show up! If it does[;] it's buggin... and that ain't thuggin...,YES,NO,NO,YES,NO,,,,,,,,,,,
virus,Virus,virus,Take <value> damage every time you trigger an error.,YES,NO,NO,NO,NO,,,,,,,,,,,
